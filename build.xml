<?xml version="1.0"?>
<project name="Ant-Test" default="main" basedir=".">
    <presetdef name="javac">
        <javac includeantruntime="false" />
    </presetdef>
    <!--Sets variables which can later be used.-->
    <!--The value of a property is accessed via ${}-->
    <property name="src.dir" location="src" />
    <property name="build.dir" location="bin" />
    <property name="dist.dir" location="dist" />
    <property name="docs.dir" location="docs" />


    <!--Deletes the existing build, docs and dist directory-->
    <target name="clean">
        <delete dir="${build.dir}" />
        <delete dir="${docs.dir}" />
        <delete dir="${dist.dir}" />
    </target>

    <!--Creates the  build, docs and dist directory-->
    <target name="makedir">
        <mkdir dir="${build.dir}" />
        <mkdir dir="${docs.dir}" />
        <mkdir dir="${dist.dir}" />
    </target>

    <!--Compiles the java code (including the usage of library for JUnit-->
    <target name="compile" depends="clean, makedir">
    <javac srcdir="${src.dir}" destdir="${build.dir}">
    </javac>
    </target>

    <!-- Creates Javadoc -->
    <target name="docs" depends="compile">
        <javadoc packagenames="src" sourcepath="${src.dir}" destdir="${docs.dir}">
            <!-- Define which files / directory should get included, we include all -->
            <fileset dir="${src.dir}">
                <include name="**" />
            </fileset>
        </javadoc>
    </target>

    <!--Creates the deployable jar file  -->
    <target name="jar" depends="compile">
        <jar destfile="${dist.dir}\AntTask.jar" basedir="${build.dir}">
            <manifest>
                <attribute name="Main-Class" value="test.FirstSeleniumTest"/>
            </manifest>
        </jar>
    </target>

    <target name="run" depends="compile, jar, docs">
        <description>Main target</description>
        <java classname="test.Main">
            <classpath>
                <pathelement location="${dist.dir}\AntTask.jar"/>
            </classpath>
        </java>
    </target>
	
	<target name="test">
	</target>
</project>

cd /home/inspire4u/devops/deploy
ls
povms.war  start.war
inspire4u@DADCA0000053:~/devops/deploy> cat /home/inspire4u/devops/deploy.sh
echo "*********************************************"
echo "Deploying the war file into Dev Environment"
echo "*******************************************"
echo "1.Switching as Tomcat User"
sudo su - tomcat << EOF
echo "2.Removing Old war back up files"
rm -rf /home/inspire4u/devops/bkup/*
echo "3.Stopping the Running Server Instance"
sudo pai stop
echo "4.Navigating to the Tomcat Deploy Folder: /srv/jas/data/povms/AppServer/tomcat_jvm/webapps"
cd /srv/jas/data/povms/AppServer/tomcat_jvm/webapps
echo "5.Storing the back up of the earlier deployed war in folder: /home/inspire4u/devops/bkup/"`date +%Y%m%d_%H%M%S`
mkdir -p /home/inspire4u/devops/bkup/`date +%Y%m%d_%H%M%S`
echo "6.Preparing the Prior Deployment Steps"
mv start.war /home/inspire4u/devops/bkup/`date +%Y%m%d_%H%M%S`/
mv start /home/inspire4u/devops/bkup/`date +%Y%m%d_%H%M%S`/
echo "7.Starting the Tomcat Instances"
cp /home/inspire4u/devops/deploy/start.war .
sudo pai start
echo "*********************************************"
echo "Deployment is completed successfully"
echo "*********************************************"
echo "Server Logs can be viewed @ /var/log/tomcat/povms.log"
EOF

